buildscript {
    ext {
        javaVersion = JavaVersion.VERSION_17
    }
    dependencies {
        classpath(libs.protobufPlugin)
        def appAndroidGoogleServicesJSON = file("app-android/google-services.json")
        if (appAndroidGoogleServicesJSON.exists()) {
            println "> Using Google Services, Crashlytics... gradle plugin."
            classpath(libs.gpsPlugin)
            classpath(libs.firebaseCrashlyticsPlugin)
            // classpath(libs.sonarPlugin)
        } else {
            println "> Not using Google Services, Crashlytics... gradle plugin."
        }
    }
}

plugins {
    id 'com.android.application' version libs.versions.androidPluginVersion apply false
    id 'com.android.library' version libs.versions.androidPluginVersion apply false
    id 'org.jetbrains.kotlin.android' version libs.versions.kotlinVersion apply false
    id 'com.google.dagger.hilt.android' version libs.versions.hiltVersion apply false
    id "com.github.ben-manes.versions" version libs.versions.benManesVersionsVersion
    id "nl.littlerobots.version-catalog-update" version libs.versions.littlerobotsVersionCatalogVersion
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

wrapper {
    distributionType = Wrapper.DistributionType.ALL
}

apply from: "${project.rootDir}/commons/dependency_updates_version_config.gradle"