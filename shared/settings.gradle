// https://developer.android.com/studio/build#settings-file
// https://docs.gradle.org/current/userguide/declaring_repositories.html#sec:repository-content-filtering
// https://docs.gradle.org/current/userguide/declaring_repositories.html#sec:declaring-repository-filter
pluginManagement {
    repositories {
        google {
            content {
                includeGroupByRegex("androidx\\..*")
                includeGroupByRegex("com\\.android.*")
                includeGroupByRegex("com\\.google\\.android\\.gms.*")
                includeGroupByRegex("com\\.google\\.firebase.*")
                includeGroupByRegex("com\\.google\\.gms.*")
                includeGroupByRegex("com\\.google\\.test.*")
            }
        }
        gradlePluginPortal {}
    }
}

plugins {
    id "org.gradle.toolchains.foojay-resolver-convention" version "1.0.0"
    id "com.gradle.develocity" version "4.1.1"
}

Properties projectNameProperties = new Properties()
def projectNamePropertiesFile = file("project_name.properties")
projectNameProperties.load(new FileInputStream(projectNamePropertiesFile))
gradle.ext.projectName = projectNameProperties["project.name"]
println "> App project name: " + gradle.ext.projectName

File pkgConfigFile = file("config/pkg")
gradle.ext.projectPkg = ""
if (pkgConfigFile.exists()) {
    gradle.ext.projectPkg = pkgConfigFile.text.trim()
    println "> App pkg: " + gradle.ext.projectPkg
}

gradle.ext.isMainApp = gradle.ext.projectPkg == "org.mtransit.android"
println "> Main app? " + gradle.ext.isMainApp

def envCI = System.getenv("CI")
gradle.ext.isCI = envCI != null && envCI != ""
println "> CI: " + gradle.ext.isCI


develocity {
    projectId = gradle.ext.projectName
    buildScan {
        publishing.onlyIf { false } // only if `--scan` is used
        if (gradle.ext.isMainApp) {
            if (gradle.ext.isCI) {
                // Required to use "--scan" on CI
                termsOfUseUrl = "https://gradle.com/help/legal-terms-of-use"
                termsOfUseAgree = "yes"
                // Disable async background uploading on CI
                uploadInBackground = false
            }
        }
    }
}

// https://developer.android.com/build/dependencies#remote-repositories
dependencyResolutionManagement {
    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
    repositories {
        google {
            content {
                includeGroupByRegex("androidx\\..*")
                includeGroupByRegex("com\\.android.*")
                includeGroupByRegex("com\\.google\\.ads.*")
                includeGroupByRegex("com\\.google\\.android.*")
                includeGroupByRegex("com\\.google\\.android\\.gms.*")
                includeGroupByRegex("com\\.google\\.firebase.*")
                includeGroupByRegex("com\\.google\\.play.*")
            }
        }
        mavenCentral {}
    }
    versionCatalogs {
        libs {
            from(files("commons/gradle/libs.versions.toml"))
        }
    }
}

rootProject.name = "MT" // same JetBrains IntelliJ files

// include(":commons") // common code shared by all - not a Gradle module
include(":commons-java") // common code shared by all projects

if (file("agency-parser").exists()) {
    include(":agency-parser") // parser
}

if (file("parser").exists()) {
    include(":parser") // common code shared by all parsers
}

include(":commons-android") // common code shared by all Android apps
include(":app-android") // Android app
