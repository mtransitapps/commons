name: MT Dependency update baseline
on:
  workflow_dispatch: # manual
  pull_request:
    paths:
      - 'gradle/libs.versions.toml'
concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.head_ref }}
  cancel-in-progress: true
jobs:
  MT-DEPENDENCY-UPDATE-BASELINE-JOB:
    name: "MT Dependency update baseline"
    runs-on: ubuntu-latest
    steps:
      - name: MT select main repo checkout branch
        id: mt-pick-main-repo-checkout-branch
        env:
          GH_TOKEN: ${{ github.token }} # GitHub CLI in a GitHub Actions workflow
        run: |
          MAIN_REPO_URL="https://github.com/mtransitapps/mtransit-for-android.git"
          MT_BRANCH_NAME=${{ github.head_ref || github.ref_name }}
          MT_TARGET_BRANCH_NAME=${{ github.base_ref || github.ref_name }}
          BRANCH_EXISTS=$(git ls-remote --heads $MAIN_REPO_URL $MT_BRANCH_NAME | wc -l);
          if [ $BRANCH_EXISTS -eq 1 ]; then
            CHECKOUT_BRANCH=$MT_BRANCH_NAME
          else
            # Pull request target branch with same name?
            BRANCH_EXISTS=$(git ls-remote --heads $MAIN_REPO_URL $MT_TARGET_BRANCH_NAME | wc -l);
            if [ $BRANCH_EXISTS -eq 1 ]; then
              CHECKOUT_BRANCH=$MT_TARGET_BRANCH_NAME
            else
              echo "WARNING: no match for current or target branch!!!"
              DEFAULT_REPO_BRANCH=$(gh api repos/mtransitapps/mtransit-for-android --jq '.default_branch');
              CHECKOUT_BRANCH=$DEFAULT_REPO_BRANCH
            fi
          fi
          echo "Checkout branch: '$CHECKOUT_BRANCH'."
          echo "mt_checkout_branch=$CHECKOUT_BRANCH" >> "$GITHUB_OUTPUT"
      - name: MT check out main repo
        uses: actions/checkout@v4
        with:
          repository: mtransitapps/mtransit-for-android
          ref: ${{ steps.mt-pick-main-repo-checkout-branch.outputs.mt_checkout_branch }}
          submodules: true # required to set right token
          fetch-depth: 0 # fetch all (not required util release build)
      - name: MT check out submodules
        run: ./checkout_submodules.sh
      - name: MT check out this module repo build SHA
        run: |
          REPOSITORY_OWNER_AND_NAME=${{ github.repository }};
          REPOSITORY_NAME=$(basename $REPOSITORY_OWNER_AND_NAME);
          MT_BRANCH_NAME=${{ github.head_ref || github.ref_name }}
          # SHA=${{ github.event.pull_request.head.sha || github.sha }};
          echo "Checking our this repo '$REPOSITORY_NAME' workflow branch '$MT_BRANCH_NAME':"
          git -C $REPOSITORY_NAME checkout -b $MT_BRANCH_NAME;
          git -C $REPOSITORY_NAME fetch;
          git -C $REPOSITORY_NAME status -sb;
          git -C $REPOSITORY_NAME log --oneline -n 10;
          echo "- app-android/dependencies/releaseCompileClasspath.txt:"
          cat app-android/dependencies/releaseCompileClasspath.txt;
          echo "- commons/shared-main/app-android/dependencies/releaseCompileClasspath.txt:"
          cat commons/shared-main/app-android/dependencies/releaseCompileClasspath.txt;
      - name: MT setup MT_GIT_BRANCH env
        if: github.event_name != 'pull_request'
        run: |
          echo "MT_GIT_BRANCH=${GITHUB_REF##*/}" >> $GITHUB_ENV
      - name: MT code setup
        run: ./commons/code_setup.sh
      - name: MT set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
      - name: MT cache > Gradle wrapper
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/wrapper
          key: gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
      - name: MT Gradle cache > Generate key
        run: ./init_cache_key.sh
      - name: MT cache > Gradle cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
          key: gradle-cache-${{ hashFiles('gradle_cache_key_checksum.txt') }}
          restore-keys: |
            gradle-cache-${{ hashFiles('gradle_cache_key_checksum.txt') }}
            gradle-cache-
      # - name: MT download dependencies
      #   run: ./download_dependencies.sh
      - name: MT dependency update baseline
        run: ./dependency_update_baseline.sh
      - name: MT commit new baseline
        run: |
          git config --global user.name 'MonTransit Bot';
          git config --global user.email '84137772+montransit@users.noreply.github.com';
          echo "- app-android/dependencies/releaseCompileClasspath.txt:"
          cat app-android/dependencies/releaseCompileClasspath.txt;
          echo "- commons/shared-main/app-android/dependencies/releaseCompileClasspath.txt:"
          cat commons/shared-main/app-android/dependencies/releaseCompileClasspath.txt;
          echo "-----"
          git -C commons diff;
          git -C commons add shared-main/app-android/dependencies/*.txt;
          git -C commons add shared-opt-dir/parser/dependencies/*.txt;
          git -C commons diff --staged;
          git -C commons commit -m "Update dependencies baseline";
          git -C commons push;
      # - name: MT test
      #   run: ./test.sh
      # - name: MT artifact > unit tests XML results
      #   uses: actions/upload-artifact@v4
      #   if: ${{ always() }} # even if tests fails
      #   with:
      #     name: unit-test-xml-results
      #     path: |
      #       */build/test-results/**/*.xml
      #       */build/test-results/*.xml
      #       */build/reports/*.xml
      # - name: MT artifact > HTML reports
      #   uses: actions/upload-artifact@v4
      #   if: ${{ always() }} # even if tests fails
      #   with:
      #     name: html-reports
      #     path: |
      #       */build/reports/
      #       !**/*.xml
      # - name: MT assemble release (APK & ABB)
      #   if: github.event_name != 'pull_request'
      #   run: ./assemble_release.sh
      #   env:
      #     MT_ENCRYPT_KEY: ${{ secrets.MT_ENCRYPT_KEY }}
      # - name: MT artifact > app-android > APK & ABB
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: app-android-apk-bundle
      #     path: |
      #       app-android/build/outputs/apk
      #       app-android/build/outputs/bundle
      - name: DEBUG GIT STATUS
        run: |
          git status -sb
          git submodule foreach git status -sb
      - name: DEBUG LIST FILES
        run: |
          ls ${{ github.workspace }}
