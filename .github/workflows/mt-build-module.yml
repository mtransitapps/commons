name: MT build git submodule
on:
  workflow_dispatch: # manual
  pull_request:
  push:
    branches:
      # - '**' # ALL
      - 'master'
# gh workflow run mt-build-module.yml --ref <branch>
# gh run list --workflow=mt-build-module.yml
# env:
#   MT_BRANCH_NAME: ${{ github.ref_name }}
#   MT_TARGET_BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.head_ref }}
  cancel-in-progress: true
jobs:
  MT-BUILD-JOB:
    name: "MT Build git submodule"
    runs-on: ubuntu-latest
    steps:
      - name: MT select main repo branch
        id: pick-main-repo-branch
        run: |
          MAIN_REPO_URL="https://github.com/mtransitapps/mtransit-for-android.git"
          echo "github.base_ref: '${{ github.base_ref }}'"
          echo "github.head_ref: '${{ github.head_ref }}'"
          echo "github.ref: '${{ github.ref }}'"
          echo "github.ref_name: '${{ github.ref_name }}'"
          MT_BRANCH_NAME=${{ github.head_ref || github.ref_name }}
          MT_TARGET_BRANCH_NAME=${{ github.base_ref || github.ref_name }}
          echo "Branch name: '$MT_BRANCH_NAME'."
          echo "Target branch name: '$MT_TARGET_BRANCH_NAME'."
          DEFAULT_PR_BRANCH="master" # TO BE DELETED
          echo "Default PR branch: '$DEFAULT_PR_BRANCH'."
          # Branch with same name?
          # echo "Before simple git ls-remote. 0"
          # git ls-remote https://github.com/mtransitapps/mtransit-for-android
          echo "Before simple git ls-remote. 0.5"
          git ls-remote $MAIN_REPO_URL
          echo "Before simple git ls-remote. 1"
          git ls-remote --heads $MAIN_REPO_URL master
          echo "Before simple git ls-remote 2."
          git ls-remote --exit-code --heads $MAIN_REPO_URL master
          echo "Before simple git ls-remote 2.1"
          git ls-remote --exit-code --heads $MAIN_REPO_URL mm/ci-build >> /dev/null
          RESULT=$?;
          echo "RESULT: $RESULT"
          echo "Before git ls-remote."
          #  > /dev/null
          git ls-remote --exit-code --heads $MAIN_REPO_URL $MT_BRANCH_NAME
          RESULT=$?;
          echo "After git ls-remote."
          echo "RESULT: $RESULT"
          if [ $RESULT -eq 0 ]; then
            CHECKOUT_BRANCH=$MT_BRANCH_NAME
          else
            # Pull request target branch with same name?
            #  > /dev/null
            git ls-remote --exit-code --heads $MAIN_REPO_URL $MT_TARGET_BRANCH_NAME
            RESULT=$?;
            echo "RESULT: $RESULT"
            if [ $RESULT -eq 0 ]; then
              CHECKOUT_BRANCH=$MT_TARGET_BRANCH_NAME
            else
              echo "WARNING: no match for current or target branch!!!"
              CHECKOUT_BRANCH=$DEFAULT_PR_BRANCH
            fi
          fi
          echo "Checkout branch: '$CHECKOUT_BRANCH'."
          echo "mt_checkout_branch=$CHECKOUT_BRANCH" >> "$GITHUB_OUTPUT"
      - name: MT check out main repo
        uses: actions/checkout@v4
        with:
          repository: mtransitapps/mtransit-for-android
          ref: ${{ steps.pick-main-repo-branch.outputs.mt_checkout_branch }}
          submodules: true # required to set right token
          fetch-depth: 0 # fetch all (not required util release build)
      - name: MT check out submodules
        run: ./checkout_submodules.sh
      - name: MT check out this module repo build SHA
        run: |
          REPOSITORY_OWNER=${{ github.repository_owner }};
          echo "Repository owner: '$REPOSITORY_OWNER'."
          REPOSITORY_OWNER_AND_NAME=${{ github.repository }};
          echo "Repository owner and name: '$REPOSITORY_OWNER_AND_NAME"
          REPOSITORY_NAME=$(basename $REPOSITORY_OWNER_AND_NAME);
          echo "Repository name: '$REPOSITORY_NAME'."
          GIT_SHA=${{ github.sha }};
          echo "git sha: '$GIT_SHA'."
          git -C $REPOSITORY_NAME checkout $GIT_SHA; 
      - name: MT setup MT_GIT_BRANCH env
        if: github.event_name != 'pull_request'
        run: |
          echo "MT_GIT_BRANCH=${GITHUB_REF##*/}" >> $GITHUB_ENV
      - name: MT code setup
        run: ./commons/code_setup.sh
      - name: MT set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
      - name: MT cache > Gradle wrapper
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/wrapper
          key: gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
      - name: MT Gradle cache > Generate key
        run: ./init_cache_key.sh
      - name: MT cache > Gradle cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
          key: gradle-cache-${{ hashFiles('gradle_cache_key_checksum.txt') }}
          restore-keys: |
            gradle-cache-${{ hashFiles('gradle_cache_key_checksum.txt') }}
            gradle-cache-
      - name: MT download dependencies
        run: ./download_dependencies.sh
      - name: MT test
        run: ./test.sh
        # env:
        #   MT_ENCRYPT_KEY: ${{ secrets.MT_ENCRYPT_KEY }}
      - name: MT artifact > unit tests XML results
        uses: actions/upload-artifact@v4
        if: ${{ always() }} # even if tests fails
        with:
          name: unit-test-xml-results
          path: |
            */build/test-results/**/*.xml
            */build/test-results/*.xml
            */build/reports/*.xml
      - name: MT artifact > HTML reports
        uses: actions/upload-artifact@v4
        if: ${{ always() }} # even if tests fails
        with:
          name: html-reports
          path: |
            */build/reports/
            !**/*.xml
      - name: MT assemble release (APK & ABB)
        if: github.event_name != 'pull_request'
        run: ./assemble_release.sh
        env:
          MT_ENCRYPT_KEY: ${{ secrets.MT_ENCRYPT_KEY }}
      - name: MT artifact > app-android > APK & ABB
        uses: actions/upload-artifact@v4
        with:
          name: app-android-apk-bundle
          path: |
            app-android/build/outputs/apk
            app-android/build/outputs/bundle
      - name: DEBUG GIT STATUS
        run: |
          git status -sb
          git submodule foreach git status -sb
      - name: DEBUG LIST FILES
        run: |
          ls ${{ github.workspace }}
