#!/bin/bash
SCRIPT_DIR="$(dirname "$0")";

ROOT_DIR="$SCRIPT_DIR/../../../../../../..";
COMMONS_DIR="${ROOT_DIR}/commons";
source ${COMMONS_DIR}/commons.sh;

setGitProjectName;

setIsCI;

GTFS_FILE="${ROOT_DIR}/app-android/src/main/res/values/gtfs_rts_values_gen.xml";
if [ ! -f "${GTFS_FILE}" ]; then
    echo ">> Generating gtfs_rts_strings.xml... SKIP (not an RTS agency)";
    exit 0; # ok
fi

echo ">> Generating gtfs_rts_strings.xml...";

APP_ANDROID_DIR="${ROOT_DIR}/app-android";
SRC_DIR="${APP_ANDROID_DIR}/src";
MAIN_DIR="${SRC_DIR}/main";
RES_DIR="${MAIN_DIR}/res";
VALUES_DIR="${RES_DIR}/values";
GTFS_RTS_STRINGS_FILE="${VALUES_DIR}/gtfs_rts_strings.xml";
mkdir -p "${VALUES_DIR}";
checkResult $?;
if [ -f "${GTFS_RTS_STRINGS_FILE}" ]; then
  echo ">> File '$GTFS_RTS_STRINGS_FILE' already exist."; # compat with existing gtfs_rts_strings.xml
  exit 0;
fi

rm -f "${GTFS_RTS_STRINGS_FILE}";
checkResult $?;
touch "${GTFS_RTS_STRINGS_FILE}";
checkResult $?;

CONFIG_DIR="${ROOT_DIR}/config";
if [ ! -d "$CONFIG_DIR" ]; then
    echo "$CONFIG_DIR doesn't exist!";
    exit 1;
fi

AGENCY_NAME_FILE="${CONFIG_DIR}/agency_name";
if [ ! -f "$AGENCY_NAME_FILE" ]; then
    echo "$AGENCY_NAME_FILE doesn't exist!";
    exit 1;
fi

AGENCY_NAME_LONG=$(tail -n 1 $AGENCY_NAME_FILE);
if [ -z "$AGENCY_NAME_LONG" ]; then
    echo "$AGENCY_NAME_LONG is empty!";
    exit 1;
fi

AGENCY_NAME_SHORT=$(head -n 1 $AGENCY_NAME_FILE);
if [ -z "$AGENCY_NAME_SHORT" ]; then
    echo "$AGENCY_NAME_SHORT is empty!";
    exit 1;
fi

GTFS_RTS_VALUES_GEN_FILE="${VALUES_DIR}/gtfs_rts_values_gen.xml";
BIKE_STATION_VALUES_FILE="${VALUES_DIR}/bike_station_values.xml"
TYPE=-1;
if [ -f $GTFS_RTS_VALUES_GEN_FILE ]; then
  # https://github.com/mtransitapps/parser/blob/master/src/main/java/org/mtransit/parser/gtfs/data/GRouteType.kt
  TYPE=$(grep -E "<integer name=\"gtfs_rts_agency_type\">[0-9]+</integer>$" $GTFS_RTS_VALUES_GEN_FILE | tr -dc '0-9')
elif [ -f $BIKE_STATION_VALUES_FILE ]; then
  TYPE=$(grep -E "<integer name=\"bike_station_agency_type\">[0-9]+</integer>$" $BIKE_STATION_VALUES_FILE | tr -dc '0-9')
else
  echo " > No agency file! (rts:$BIKE_STATION_VALUES_FILE|bike:$BIKE_STATION_VALUES_FILE)"
  exit 1 # error
fi
TYPE_LABEL="";
if [ "$TYPE" -eq 0 ]; then # LIGHT_RAIL
    TYPE_LABEL="light rail"; # TODO?
elif [ "$TYPE" -eq 1 ]; then # SUBWAY
    TYPE_LABEL="subways";
elif [ "$TYPE" -eq 2 ]; then # TRAIN
    TYPE_LABEL="trains";
elif [ "$TYPE" -eq 3 ]; then # BUS
    TYPE_LABEL="buses";
elif [ "$TYPE" -eq 4 ]; then # FERRY
    TYPE_LABEL="ferries";
elif [ "$TYPE" -eq 100 ]; then # BIKE
    TYPE_LABEL="bike sharing";
else
  echo "Unexpected agency type '$TYPE'!"
  exit 1 # error
fi

cat >>"${GTFS_RTS_STRINGS_FILE}" <<EOL
<?xml version="1.0" encoding="utf-8"?>
<!-- DO NOT EDIT: this file is generated by MTgtfs_rts_strings.xml.MT.sh -->
<resources xmlns:tools="http://schemas.android.com/tools" tools:locale="en">
    <string name="gtfs_rts_label">$AGENCY_NAME_LONG $TYPE_LABEL</string>
    <string name="gtfs_rts_short_name">$AGENCY_NAME_SHORT</string>
</resources>
EOL

if [[ ${IS_CI} = true ]]; then
  echo "---------------------------------------------------------------------------------------------------------------";
  cat "${GTFS_RTS_STRINGS_FILE}"; #DEBUG
  echo "---------------------------------------------------------------------------------------------------------------";
fi

echo ">> Generating gtfs_rts_strings.xml... DONE";